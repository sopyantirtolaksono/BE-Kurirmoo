// Code generated by go-swagger; DO NOT EDIT.

package update_city

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"kurirmoo/gen/models"
)

// UpdateCityOKCode is the HTTP code returned for type UpdateCityOK
const UpdateCityOKCode int = 200

/*
UpdateCityOK OK

swagger:response updateCityOK
*/
type UpdateCityOK struct {

	/*
	  In: Body
	*/
	Payload *UpdateCityOKBody `json:"body,omitempty"`
}

// NewUpdateCityOK creates UpdateCityOK with default headers values
func NewUpdateCityOK() *UpdateCityOK {

	return &UpdateCityOK{}
}

// WithPayload adds the payload to the update city o k response
func (o *UpdateCityOK) WithPayload(payload *UpdateCityOKBody) *UpdateCityOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city o k response
func (o *UpdateCityOK) SetPayload(payload *UpdateCityOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCityBadRequestCode is the HTTP code returned for type UpdateCityBadRequest
const UpdateCityBadRequestCode int = 400

/*
UpdateCityBadRequest Bad Request

swagger:response updateCityBadRequest
*/
type UpdateCityBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCityBadRequest creates UpdateCityBadRequest with default headers values
func NewUpdateCityBadRequest() *UpdateCityBadRequest {

	return &UpdateCityBadRequest{}
}

// WithPayload adds the payload to the update city bad request response
func (o *UpdateCityBadRequest) WithPayload(payload *models.Error) *UpdateCityBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city bad request response
func (o *UpdateCityBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCityNotFoundCode is the HTTP code returned for type UpdateCityNotFound
const UpdateCityNotFoundCode int = 404

/*
UpdateCityNotFound The specified resource was not found

swagger:response updateCityNotFound
*/
type UpdateCityNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCityNotFound creates UpdateCityNotFound with default headers values
func NewUpdateCityNotFound() *UpdateCityNotFound {

	return &UpdateCityNotFound{}
}

// WithPayload adds the payload to the update city not found response
func (o *UpdateCityNotFound) WithPayload(payload *models.Error) *UpdateCityNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city not found response
func (o *UpdateCityNotFound) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCityMethodNotAllowedCode is the HTTP code returned for type UpdateCityMethodNotAllowed
const UpdateCityMethodNotAllowedCode int = 405

/*
UpdateCityMethodNotAllowed MethodNotAllowed

swagger:response updateCityMethodNotAllowed
*/
type UpdateCityMethodNotAllowed struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCityMethodNotAllowed creates UpdateCityMethodNotAllowed with default headers values
func NewUpdateCityMethodNotAllowed() *UpdateCityMethodNotAllowed {

	return &UpdateCityMethodNotAllowed{}
}

// WithPayload adds the payload to the update city method not allowed response
func (o *UpdateCityMethodNotAllowed) WithPayload(payload *models.Error) *UpdateCityMethodNotAllowed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city method not allowed response
func (o *UpdateCityMethodNotAllowed) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityMethodNotAllowed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(405)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// UpdateCityInternalServerErrorCode is the HTTP code returned for type UpdateCityInternalServerError
const UpdateCityInternalServerErrorCode int = 500

/*
UpdateCityInternalServerError Internal server error

swagger:response updateCityInternalServerError
*/
type UpdateCityInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCityInternalServerError creates UpdateCityInternalServerError with default headers values
func NewUpdateCityInternalServerError() *UpdateCityInternalServerError {

	return &UpdateCityInternalServerError{}
}

// WithPayload adds the payload to the update city internal server error response
func (o *UpdateCityInternalServerError) WithPayload(payload *models.Error) *UpdateCityInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city internal server error response
func (o *UpdateCityInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
UpdateCityDefault error

swagger:response updateCityDefault
*/
type UpdateCityDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewUpdateCityDefault creates UpdateCityDefault with default headers values
func NewUpdateCityDefault(code int) *UpdateCityDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateCityDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update city default response
func (o *UpdateCityDefault) WithStatusCode(code int) *UpdateCityDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update city default response
func (o *UpdateCityDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update city default response
func (o *UpdateCityDefault) WithPayload(payload *models.Error) *UpdateCityDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update city default response
func (o *UpdateCityDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateCityDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
