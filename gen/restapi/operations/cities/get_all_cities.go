// Code generated by go-swagger; DO NOT EDIT.

package cities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"context"
	"net/http"

	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetAllCitiesHandlerFunc turns a function with the right signature into a get all cities handler
type GetAllCitiesHandlerFunc func(GetAllCitiesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAllCitiesHandlerFunc) Handle(params GetAllCitiesParams) middleware.Responder {
	return fn(params)
}

// GetAllCitiesHandler interface for that can handle valid get all cities params
type GetAllCitiesHandler interface {
	Handle(GetAllCitiesParams) middleware.Responder
}

// NewGetAllCities creates a new http.Handler for the get all cities operation
func NewGetAllCities(ctx *middleware.Context, handler GetAllCitiesHandler) *GetAllCities {
	return &GetAllCities{Context: ctx, Handler: handler}
}

/*
	GetAllCities swagger:route GET /api/v1/cities cities getAllCities

return a list of City

Return all list of cities
*/
type GetAllCities struct {
	Context *middleware.Context
	Handler GetAllCitiesHandler
}

func (o *GetAllCities) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetAllCitiesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// GetAllCitiesOKBodyItems0 get all cities o k body items0
//
// swagger:model GetAllCitiesOKBodyItems0
type GetAllCitiesOKBodyItems0 struct {

	// city code
	CityCode string `json:"city_code,omitempty"`

	// city name
	CityName string `json:"city_name,omitempty"`

	// created at
	CreatedAt int64 `json:"created_at" gorm:"type:int;autoCreateTime"`

	// id
	ID int64 `json:"id,omitempty"`

	// updated at
	UpdatedAt int64 `json:"updated_at" gorm:"type:int;autoUpdateTime"`
}

// Validate validates this get all cities o k body items0
func (o *GetAllCitiesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get all cities o k body items0 based on context it is used
func (o *GetAllCitiesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAllCitiesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAllCitiesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetAllCitiesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
