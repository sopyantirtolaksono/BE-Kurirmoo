// Code generated by go-swagger; DO NOT EDIT.

package cities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"kurirmoo/gen/models"
)

// GetAllCitiesOKCode is the HTTP code returned for type GetAllCitiesOK
const GetAllCitiesOKCode int = 200

/*
GetAllCitiesOK A JSON array of city's name

swagger:response getAllCitiesOK
*/
type GetAllCitiesOK struct {

	/*
	  In: Body
	*/
	Payload []*GetAllCitiesOKBodyItems0 `json:"body,omitempty"`
}

// NewGetAllCitiesOK creates GetAllCitiesOK with default headers values
func NewGetAllCitiesOK() *GetAllCitiesOK {

	return &GetAllCitiesOK{}
}

// WithPayload adds the payload to the get all cities o k response
func (o *GetAllCitiesOK) WithPayload(payload []*GetAllCitiesOKBodyItems0) *GetAllCitiesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all cities o k response
func (o *GetAllCitiesOK) SetPayload(payload []*GetAllCitiesOKBodyItems0) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCitiesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*GetAllCitiesOKBodyItems0, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetAllCitiesBadRequestCode is the HTTP code returned for type GetAllCitiesBadRequest
const GetAllCitiesBadRequestCode int = 400

/*
GetAllCitiesBadRequest Bad Request

swagger:response getAllCitiesBadRequest
*/
type GetAllCitiesBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllCitiesBadRequest creates GetAllCitiesBadRequest with default headers values
func NewGetAllCitiesBadRequest() *GetAllCitiesBadRequest {

	return &GetAllCitiesBadRequest{}
}

// WithPayload adds the payload to the get all cities bad request response
func (o *GetAllCitiesBadRequest) WithPayload(payload *models.Error) *GetAllCitiesBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all cities bad request response
func (o *GetAllCitiesBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCitiesBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*
GetAllCitiesDefault error

swagger:response getAllCitiesDefault
*/
type GetAllCitiesDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetAllCitiesDefault creates GetAllCitiesDefault with default headers values
func NewGetAllCitiesDefault(code int) *GetAllCitiesDefault {
	if code <= 0 {
		code = 500
	}

	return &GetAllCitiesDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get all cities default response
func (o *GetAllCitiesDefault) WithStatusCode(code int) *GetAllCitiesDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get all cities default response
func (o *GetAllCitiesDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get all cities default response
func (o *GetAllCitiesDefault) WithPayload(payload *models.Error) *GetAllCitiesDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get all cities default response
func (o *GetAllCitiesDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetAllCitiesDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
