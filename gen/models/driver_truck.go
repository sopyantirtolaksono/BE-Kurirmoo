// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// DriverTruck driver truck
//
// swagger:model DriverTruck
type DriverTruck struct {

	// created at
	CreatedAt int64 `json:"created_at" gorm:"type:int;autoCreateTime"`

	// driver id
	DriverID uint64 `json:"driver_id,omitempty"`

	// truck id
	TruckID uint64 `json:"truck_id,omitempty"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *DriverTruck) UnmarshalJSON(raw []byte) error {
	// AO0
	var dataAO0 struct {
		CreatedAt int64 `json:"created_at"`

		DriverID uint64 `json:"driver_id,omitempty"`

		TruckID uint64 `json:"truck_id,omitempty"`
	}
	if err := swag.ReadJSON(raw, &dataAO0); err != nil {
		return err
	}

	m.CreatedAt = dataAO0.CreatedAt

	m.DriverID = dataAO0.DriverID

	m.TruckID = dataAO0.TruckID

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m DriverTruck) MarshalJSON() ([]byte, error) {
	_parts := make([][]byte, 0, 1)

	var dataAO0 struct {
		CreatedAt int64 `json:"created_at"`

		DriverID uint64 `json:"driver_id,omitempty"`

		TruckID uint64 `json:"truck_id,omitempty"`
	}

	dataAO0.CreatedAt = m.CreatedAt

	dataAO0.DriverID = m.DriverID

	dataAO0.TruckID = m.TruckID

	jsonDataAO0, errAO0 := swag.WriteJSON(dataAO0)
	if errAO0 != nil {
		return nil, errAO0
	}
	_parts = append(_parts, jsonDataAO0)
	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this driver truck
func (m *DriverTruck) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this driver truck based on context it is used
func (m *DriverTruck) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *DriverTruck) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *DriverTruck) UnmarshalBinary(b []byte) error {
	var res DriverTruck
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
