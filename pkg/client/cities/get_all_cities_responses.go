// Code generated by go-swagger; DO NOT EDIT.

package cities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"kurirmoo/gen/models"
)

// GetAllCitiesReader is a Reader for the GetAllCities structure.
type GetAllCitiesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllCitiesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllCitiesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllCitiesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetAllCitiesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAllCitiesOK creates a GetAllCitiesOK with default headers values
func NewGetAllCitiesOK() *GetAllCitiesOK {
	return &GetAllCitiesOK{}
}

/*
GetAllCitiesOK describes a response with status code 200, with default header values.

A JSON array of city's name
*/
type GetAllCitiesOK struct {
	Payload []*GetAllCitiesOKBodyItems0
}

// IsSuccess returns true when this get all cities o k response has a 2xx status code
func (o *GetAllCitiesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all cities o k response has a 3xx status code
func (o *GetAllCitiesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cities o k response has a 4xx status code
func (o *GetAllCitiesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all cities o k response has a 5xx status code
func (o *GetAllCitiesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cities o k response a status code equal to that given
func (o *GetAllCitiesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all cities o k response
func (o *GetAllCitiesOK) Code() int {
	return 200
}

func (o *GetAllCitiesOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCitiesOK  %+v", 200, o.Payload)
}

func (o *GetAllCitiesOK) String() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCitiesOK  %+v", 200, o.Payload)
}

func (o *GetAllCitiesOK) GetPayload() []*GetAllCitiesOKBodyItems0 {
	return o.Payload
}

func (o *GetAllCitiesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllCitiesBadRequest creates a GetAllCitiesBadRequest with default headers values
func NewGetAllCitiesBadRequest() *GetAllCitiesBadRequest {
	return &GetAllCitiesBadRequest{}
}

/*
GetAllCitiesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllCitiesBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get all cities bad request response has a 2xx status code
func (o *GetAllCitiesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all cities bad request response has a 3xx status code
func (o *GetAllCitiesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cities bad request response has a 4xx status code
func (o *GetAllCitiesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all cities bad request response has a 5xx status code
func (o *GetAllCitiesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cities bad request response a status code equal to that given
func (o *GetAllCitiesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all cities bad request response
func (o *GetAllCitiesBadRequest) Code() int {
	return 400
}

func (o *GetAllCitiesBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCitiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllCitiesBadRequest) String() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCitiesBadRequest  %+v", 400, o.Payload)
}

func (o *GetAllCitiesBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllCitiesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllCitiesDefault creates a GetAllCitiesDefault with default headers values
func NewGetAllCitiesDefault(code int) *GetAllCitiesDefault {
	return &GetAllCitiesDefault{
		_statusCode: code,
	}
}

/*
GetAllCitiesDefault describes a response with status code -1, with default header values.

error
*/
type GetAllCitiesDefault struct {
	_statusCode int

	Payload *models.Error
}

// IsSuccess returns true when this get all cities default response has a 2xx status code
func (o *GetAllCitiesDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get all cities default response has a 3xx status code
func (o *GetAllCitiesDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get all cities default response has a 4xx status code
func (o *GetAllCitiesDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get all cities default response has a 5xx status code
func (o *GetAllCitiesDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get all cities default response a status code equal to that given
func (o *GetAllCitiesDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get all cities default response
func (o *GetAllCitiesDefault) Code() int {
	return o._statusCode
}

func (o *GetAllCitiesDefault) Error() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCities default  %+v", o._statusCode, o.Payload)
}

func (o *GetAllCitiesDefault) String() string {
	return fmt.Sprintf("[GET /api/v1/cities][%d] getAllCities default  %+v", o._statusCode, o.Payload)
}

func (o *GetAllCitiesDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAllCitiesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*
GetAllCitiesOKBodyItems0 get all cities o k body items0
swagger:model GetAllCitiesOKBodyItems0
*/
type GetAllCitiesOKBodyItems0 struct {

	// city code
	CityCode string `json:"city_code,omitempty"`

	// city name
	CityName string `json:"city_name,omitempty"`

	// created at
	CreatedAt int64 `json:"created_at" gorm:"type:int;autoCreateTime"`

	// id
	ID int64 `json:"id,omitempty"`

	// updated at
	UpdatedAt int64 `json:"updated_at" gorm:"type:int;autoUpdateTime"`
}

// Validate validates this get all cities o k body items0
func (o *GetAllCitiesOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get all cities o k body items0 based on context it is used
func (o *GetAllCitiesOKBodyItems0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetAllCitiesOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetAllCitiesOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetAllCitiesOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
